# GCP Project Configuration
project_id = "your-gcp-project-id"

# Region Configuration
primary_region   = "europe-west1"  # Belgium - closest to Spain
secondary_region = "europe-west3"  # Frankfurt - good backup option
regions          = ["europe-west1", "europe-west3"]

# Node Pools Configuration
node_pools = {
  primary = {
    machine_type = "e2-standard-2"
    node_count   = 3
    disk_size_gb = 50
    disk_type    = "pd-standard"
    preemptible  = false
  }
  secondary = {
    machine_type = "e2-standard-2"
    node_count   = 2
    disk_size_gb = 50
    disk_type    = "pd-standard"
    preemptible  = true
  }
}

# Environment Configuration
environment = "production"

# Domain Configuration
domain_name = "golang-ha.example.com"

# Feature Flags
enable_monitoring = true
enable_argocd     = true

# WAF (Cloud Armor) Configuration
waf_rate_limit_requests              = 100    # Requests per interval
waf_rate_limit_interval              = 60     # Seconds
waf_ban_duration_sec                 = 600    # 10 minutes ban
waf_blocked_countries                = []     # e.g., ["CN", "RU", "KP"]
waf_trusted_ip_ranges                = []     # e.g., ["10.0.0.0/8"]
waf_enable_health_check_throttling   = true
waf_enable_adaptive_protection       = true
waf_log_sampling_rate                = 0.1   # 10% of requests logged

# Additional blocked user agents (beyond default list)
waf_blocked_user_agents = [
  "sqlmap",
  "nikto", 
  "nmap",
  "masscan",
  "zap",
  "w3af",
  "dirbuster",
  "gobuster",
  "dirb",
  "burpsuite",
  "acunetix",
  "nessus"
]

# Audit Logging Configuration
audit_dataset_location          = "EU"                # EU for European deployment
audit_logs_location             = "EUROPE-WEST1"      # Match primary region
audit_log_retention_days        = 365                 # 1 year retention
enable_audit_alerting           = true
audit_failed_auth_threshold     = 5                   # Alert after 5 failed auth attempts
audit_notification_channels     = []                  # Add notification channel IDs
audit_compliance_mode           = "extended"          # basic, extended, strict
audit_enable_data_access_logs   = false              # Expensive, enable for strict compliance
audit_enable_admin_activity_logs = true

# ArgoCD GitOps Configuration
argocd_git_repository_url    = "https://github.com/Cris245/Terraform-k8s.git"
argocd_admin_password        = "your-secure-password-here"    # Change this!
argocd_ha_enabled           = false                           # Simple single instance
argocd_enable_ingress       = true                            # Use Istio ingress
argocd_enable_monitoring    = true                            # Prometheus metrics
argocd_admin_groups         = ["argocd-admins", "platform-engineering"]
argocd_developer_groups     = ["developers"]
argocd_sre_groups          = ["sre-team"]
