apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: block-malicious-user-agents
  namespace: istio-system
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
            subFilter:
              name: envoy.filters.http.router
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.lua
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          inlineCode: |
            function envoy_on_request(handle)
              local ua = handle:headers():get("user-agent") or ""
              local patterns = {
                "sqlmap", "nikto", "nmap", "masscan", "zap", "w3af",
                "dirbuster", "gobuster", "dirb", "burpsuite", "acunetix", "nessus"
              }
              for _, p in ipairs(patterns) do
                if string.find(string.lower(ua), p) then
                  handle:respond({[":status"] = "403"}, "Forbidden\n")
                  return
                end
              end
            end
